{"version":3,"sources":["reportWebVitals.js","components/Card.js","components/CardList.js","components/SearchBox.js","components/Scrolls.js","containers/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","name","email","id","className","alt","src","CardList","robots","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scrolls","props","style","overflowY","border","height","children","App","onSearchChange","event","setState","target","value","state","fetch","response","json","users","this","filteredRobots","filter","robot","toLowerCase","includes","length","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kMAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,2CCKCQ,EAVF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,GACzB,OACC,sBAAKC,UAAU,uDAAf,UACA,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,mBACrB,oBAAIC,UAAU,SAAd,SAAwBH,IACtB,oBAAIG,UAAU,kBAAd,SAAiCF,QCcxBK,EAlBE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OAClB,OACA,8BAECA,EAAOC,KAAI,SAACC,EAAMC,GACd,OACC,cAAC,EAAD,CAEAR,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHZS,SCIGC,EAZG,SAAC,GAAgC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAChC,OACC,qBAAKV,UAAU,MAAf,SACC,uBACAA,UAAU,4CACVW,KAAK,SACLC,YAAY,mBACZC,SAAUH,OCCEI,G,MARC,SAACC,GAChB,OACC,qBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAArE,SACEJ,EAAMK,aC2CKC,E,kDAzCd,aAAe,IAAD,8BACb,gBAaDC,eAAiB,SAACC,GACjB,EAAKC,SAAS,CAACf,YAAac,EAAME,OAAOC,SAbzC,EAAKC,MAAQ,CACZvB,OAAQ,GACRK,YAAa,IAJD,E,qDAQd,WAAqB,IAAD,OACnBmB,MAAM,8CACJtC,MAAK,SAAAuC,GAAQ,OAAIA,EAASC,UAC1BxC,MAAK,SAAAyC,GAAK,OAAI,EAAKP,SAAS,CAACpB,OAAQ2B,S,oBAOxC,WAAU,IAAD,EACsBC,KAAKL,MAA5BvB,EADC,EACDA,OAAQK,EADP,EACOA,YACTwB,EAAiB7B,EAAO8B,QAAO,SAAAC,GACpC,OAAQA,EAAMtC,KAAKuC,cAAcC,SAAS5B,EAAY2B,kBAGvD,OAAQhC,EAAOkC,OAGb,sBAAKtC,UAAU,KAAf,UACC,0GAGA,0CACA,cAAC,EAAD,CAAWU,aAAcsB,KAAKV,iBAC7B,cAAC,EAAD,UACC,cAAC,EAAD,CAAUlB,OAAQ6B,SATtB,gD,GA1BeM,aCClBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAEDC,SAASC,eAAe,SAM1BzD,M","file":"static/js/main.1603e9c7.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\n\r\nconst Card = ({name, email, id}) => {\r\n  \treturn (\r\n\t  \t<div className=\"bg-light-green dib br3 mw5 pa3 ma2 grow bw2 shadow-3\">\r\n\t\t\t\t<img alt='robots' src={`https://robohash.org/${id}?size=200x200`} />\r\n\t\t\t\t<h2 className=\"f5 mb2\">{name}</h2>\r\n\t\t    <h3 className=\"f6 fw4 grey mt0\">{email}</h3>\t\t\t \r\n\t\t\t</div>\r\n  \t);\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({robots}) => {\r\n\treturn(\r\n\t<div>\r\n\t{\r\n\t\trobots.map((user, i) => {\r\n\t\t    return (\r\n\t\t    \t<Card \r\n\t\t    \tkey={i} \r\n\t\t    \tid={robots[i].id} \r\n\t\t    \tname={robots[i].name} \r\n\t\t    \temail={robots[i].email} /> \r\n\t\t    )\r\n\t\t})\r\n\t}\r\n\t</div>\r\n\t)\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({searchfield, searchChange}) => {\r\n\treturn(\r\n\t\t<div className='pa2'>\r\n\t\t\t<input\r\n\t\t\tclassName='pa3 ba b--green bg-lightest-blue shadow-1'\r\n\t\t\ttype='search' \r\n\t\t\tplaceholder='Search robots...' \r\n\t\t\tonChange={searchChange}/>\r\n\t\t</div>\t\r\n\t)\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scrolls = (props) => {\r\n\treturn(\r\n\t\t<div style={{overflowY: 'scroll', border: '1px solid black', height: '459px'}}>\r\n\t\t\t{props.children}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Scrolls;","import React, {Component} from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox'\r\nimport './App.css'\r\nimport Scrolls from '../components/Scrolls'\r\n\r\nclass App extends Component {\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t\tthis.state = {\r\n\t\t\trobots: [],\r\n\t\t\tsearchfield: ''\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\r\n\t\t\t.then(response => response.json())\r\n\t\t\t.then(users => this.setState({robots: users}));\r\n\t}\r\n\r\n\tonSearchChange = (event) => {\r\n\t\tthis.setState({searchfield: event.target.value})\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst {robots, searchfield} = this.state;\r\n\t\tconst filteredRobots = robots.filter(robot => {\r\n\t\t\treturn (robot.name.toLowerCase().includes(searchfield.toLowerCase()));\r\n\t\t})\r\n\r\n\t\treturn !robots.length ? \r\n\t\t\t<h3>Loading...</h3> :\r\n\t\t\t(\r\n\t\t\t\t<div className='tc'>\r\n\t\t\t\t\t<style>\r\n\t\t\t\t\t\t@import url('https://fonts.googleapis.com/css2?family=Merriweather');\r\n\t\t\t\t\t</style>\r\n\t\t\t\t\t<h1>RobotNet</h1>\r\n\t\t\t\t\t<SearchBox searchChange={this.onSearchChange}/>\r\n\t\t\t  \t<Scrolls>\r\n\t\t\t  \t\t<CardList robots={filteredRobots}/>\r\n\t\t\t  \t</Scrolls>\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t}\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\nimport App from './containers/App';\n\nReactDOM.render(\n  <React.StrictMode>\n  \t<App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}